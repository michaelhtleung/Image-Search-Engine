{"version":3,"sources":["static/alice.jpg","AccountDisplay.js","ImageUploadButton.js","SearchButton.js","TextSearchBar.js","NavBar.js","static/bob.jpg","ImageCard.js","static/blue_chair.jpg","static/brown_coat.jpg","static/red_purse.jpg","ContentDisplayRegion.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","AccountDisplay","classes","Card","className","CardHeader","Avatar","aria-label","src","profilePicture","alt","title","margin","spacing","input","display","ImageUploadButton","props","useState","buttonColor","setButtonColor","buttonText","setButtonText","accept","id","multiple","type","value","searchImage","onChange","event","callback","target","htmlFor","Button","variant","color","component","startIcon","button","SearchButton","onClick","a","uri","searchText","data","URLSearchParams","append","axios","post","url","method","headers","cardData","updateImageCardData","alert","flexGrow","menuButton","marginRight","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","width","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","TextSearchBar","InputBase","placeholder","inputProps","NavBar","setSearchText","setSearchImage","AppBar","Toolbar","newSearchText","newSearchImage","ImageCard","setProfilePicture","useEffect","author_id","profilePicture1","profilePicture2","first_name","subheader","datetime_upload","CardMedia","image","pixels","ContentDisplayRegion","undefined","imageCardData","length","map","image_id","toString","Typography","App","setImageCardData","get","newImageCardData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.639b7455.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/alice.fb213515.jpg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport { red } from '@material-ui/core/colors';\nimport profilePicture from \"./static/alice.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\nexport default function AccountDisplay() {\n    const classes = useStyles();\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                avatar={\n                    <Avatar aria-label=\"recipe\" className={classes.avatar} src={profilePicture} alt={\"Alice\"}/>\n                }\n                title=\"Alice\"\n            />\n        </Card>\n    );\n}\n","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ImageIcon from '@material-ui/icons/Image';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nexport default function ImageUploadButton(props) {\n    let [buttonColor, setButtonColor] = useState(\"\");\n    let [buttonText, setButtonText] = useState(\"Upload Similar Image to Search\");\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <input\n                accept=\"image/*\"\n                className={classes.input}\n                id=\"contained-button-file\"\n                multiple\n                type=\"file\"\n                value={props.searchImage}\n                onChange={event => {\n                    setButtonColor('primary');\n                    setButtonText('Image Attached')\n                    props.callback(event.target.value);\n                }}\n            />\n            <label htmlFor=\"contained-button-file\">\n                <Button\n                    variant=\"contained\"\n                    color={buttonColor}\n                    component=\"span\"\n                    startIcon={<ImageIcon/>}\n                >\n                    {buttonText}\n                </Button>\n            </label>\n        </div>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport Icon from '@material-ui/core/Icon';\nimport SaveIcon from '@material-ui/icons/Save';\nimport SearchIcon from '@material-ui/icons/Search';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nexport default function SearchButton(props) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                startIcon={<SearchIcon />}\n                onClick={\n                    async () => {\n                        // alert('click');\n                        // let uri = 'http://localhost:8080/searchImagesByText';\n                        let uri = 'https://shopify-dev-challenge-f21.uc.r.appspot.com/api/searchImagesByText';\n                        // let uri = 'https://20210509t091806-dot-backend-dot-shopify-dev-challenge-f21.uc.r.appspot.com/searchImagesByText';\n                        let searchText = props.searchText;\n                        try {\n                        // if (props.searchImage !== 0) {\n                        //     // case: there is an attached image\n                        //     let searchTextFromImage = await axios.post(gcp_cv_uri, props.searchImage);\n                        //     searchText += ` ${searchTextFromImage }`;\n                        //     let cardData = await axios.post(uri, searchText);\n                        //     props.updateImageCardData(await cardData);\n                        // } else {\n                            // case: there is no attached image\n                            let data = new URLSearchParams();\n                            data.append('search_terms', searchText);\n                            let cardData = await axios.post(uri, data, {\n                                url: uri,\n                                method: 'post',\n                                data: data,\n                                headers: {\n                                    \"Content-Type\": \"application/x-www-form-urlencoded\"\n                                },\n                            });\n                            // alert('POST response received');\n                            props.updateImageCardData(await cardData);\n                        } catch (error) {\n                            alert(error);\n                        }\n                    // }\n                }}\n            >\n                Run Search\n            </Button>\n        </div>\n    );\n}\n","import TextFieldsIcon from \"@material-ui/icons/TextFields\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport {React, useState} from \"react\";\nimport {fade, makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\nexport default function TextSearchBar(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.search}>\n            <div className={classes.searchIcon}>\n                <TextFieldsIcon />\n            </div>\n            <InputBase\n                placeholder=\"Type Search Terms\"\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                value={props.searchText}\n                onChange={event => props.callback(event.target.value)}\n            />\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AccountDisplay from \"./AccountDisplay\";\nimport ImageUploadButton from \"./ImageUploadButton\";\nimport SearchButton from \"./SearchButton\";\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport TextSearchBar from \"./TextSearchBar\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\nexport default function NavBar(props) {\n    let [searchText, setSearchText] = useState('');\n    let [searchImage, setSearchImage] = useState('');\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <AccountDisplay></AccountDisplay>\n                    <TextSearchBar searchText={searchText} callback={newSearchText => setSearchText(newSearchText)}></TextSearchBar>\n                    <ImageUploadButton searchImage={searchImage} callback={newSearchImage => setSearchImage(newSearchImage)}></ImageUploadButton>\n                    <SearchButton searchText={searchText} searchImage={searchImage} updateImageCardData={props.updateImageCardData}></SearchButton>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/bob.3609809a.jpg\";","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport profilePicture1 from \"./static/alice.jpg\";\nimport profilePicture2 from \"./static/bob.jpg\";\nimport contentPicture1 from \"./static/blue_chair.jpg\";\nimport contentPicture2 from \"./static/brown_coat.jpg\";\nimport contentPicture3 from \"./static/red_purse.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\nexport default function ImageCard(props) {\n    const classes = useStyles();\n    let [profilePicture, setProfilePicture] = useState(0);\n    useEffect(() => {\n        if (props.cardData.author_id == 1) {\n            setProfilePicture(profilePicture1);\n        } else if (props.cardData.author_id == 2) {\n            setProfilePicture(profilePicture2);\n        }\n    });\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                avatar={\n                    <Avatar aria-label=\"recipe\" className={classes.avatar} src={profilePicture} alt={\"Alice\"}/>\n                }\n                title={props.cardData.first_name}\n                subheader={props.cardData.datetime_upload}\n            />\n            <CardMedia className={classes.media} image={\"data:image/png;base64,\" + props.cardData.pixels}/>\n            {/*<CardMedia className={classes.media} image={props.pixels} title=\"Paella dish\"/>*/}\n        </Card>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/blue_chair.7e244035.jpg\";","export default __webpack_public_path__ + \"static/media/brown_coat.736ba2e7.jpg\";","export default __webpack_public_path__ + \"static/media/red_purse.9865a495.jpg\";","import ImageCard from \"./ImageCard\";\nimport Typography from '@material-ui/core/Typography';\n\nexport default function ContentDisplayRegion(props) {\n    if (props.imageCardData.data !== undefined && props.imageCardData.data.length >= 1) {\n        return (\n            <div>\n                <ul>\n                    {props.imageCardData.data.map(cardData => {\n                        return (\n                            <ImageCard\n                                cardData={cardData}\n                                key={cardData.image_id.toString()}>\n                            </ImageCard>\n                        );\n                    })}\n                </ul>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <Typography variant=\"h4\">\n                    No matching images found.\n                </Typography>\n                <Typography variant=\"h6\">\n                    Please try another search query.\n                </Typography>\n            </div>\n        );\n    }\n}\n","import './App.css';\nimport NavBar from './NavBar';\nimport ContentDisplayRegion from './ContentDisplayRegion';\nimport React, {useState, useEffect} from 'react';\nimport axios from \"axios\";\n\nfunction App() {\n    let [imageCardData, setImageCardData] = useState({data: []});\n    useEffect(async () => {\n        // let uri = 'http://localhost:8080/';\n        let uri = 'https://shopify-dev-challenge-f21.uc.r.appspot.com/api/';\n        // let uri = 'https://20210509t091806-dot-backend-dot-shopify-dev-challenge-f21.uc.r.appspot.com';\n        try {\n            let cardData = await axios.get(uri);\n            // alert('GET response received');\n            setImageCardData(cardData);\n        } catch (error) {\n            alert(error);\n        }\n    //    empty array makes useEffect run only on initial page load\n    }, []);\n    return (\n        <div className=\"App\">\n            <NavBar updateImageCardData={(newImageCardData) => setImageCardData(newImageCardData)}></NavBar>\n            <ContentDisplayRegion imageCardData={imageCardData}></ContentDisplayRegion>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}